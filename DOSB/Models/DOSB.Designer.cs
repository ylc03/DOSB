//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("DOSBModel", "FK_Employee_Segment", "Segment", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DOSB.Models.Segment), "Employee", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DOSB.Models.Employee), true)]
[assembly: EdmRelationshipAttribute("DOSBModel", "FK_Torque_Employee", "Employee", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DOSB.Models.Employee), "Torque", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DOSB.Models.Torque), true)]
[assembly: EdmRelationshipAttribute("DOSBModel", "FK_WorkshopAssignment_Employee", "Employee", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DOSB.Models.Employee), "WorkshopAssignment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DOSB.Models.WorkshopAssignment), true)]
[assembly: EdmRelationshipAttribute("DOSBModel", "FK_Segment_Parent", "Segment", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DOSB.Models.Segment), "Segment1", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DOSB.Models.Segment), true)]
[assembly: EdmRelationshipAttribute("DOSBModel", "FK_WorkshopAssignment_WorkshopDailyActivity", "WorkshopDailyActivity", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DOSB.Models.WorkshopDailyActivity), "WorkshopAssignment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DOSB.Models.WorkshopAssignment), true)]
[assembly: EdmRelationshipAttribute("DOSBModel", "FK_PressureTest_Employee", "Employee", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DOSB.Models.Employee), "PressureTest", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DOSB.Models.PressureTest), true)]
[assembly: EdmRelationshipAttribute("DOSBModel", "FK_PressureTest_Approver", "Employee", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DOSB.Models.Employee), "PressureTest", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DOSB.Models.PressureTest), true)]
[assembly: EdmRelationshipAttribute("DOSBModel", "EmployeeRoles", "Employee", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DOSB.Models.Employee), "Role", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DOSB.Models.Role))]
[assembly: EdmRelationshipAttribute("DOSBModel", "FK_Torque_Approver", "Employee", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DOSB.Models.Employee), "Torque", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DOSB.Models.Torque), true)]
[assembly: EdmRelationshipAttribute("DOSBModel", "FK_CompletionActivityRelations_AssemblyType", "AssemblyType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DOSB.Models.AssemblyType), "CompletionActivityRelations", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DOSB.Models.Completion_Activities), true)]
[assembly: EdmRelationshipAttribute("DOSBModel", "FK_Clients_Countries", "Countries", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DOSB.Models.Countries), "Clients", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DOSB.Models.Clients), true)]
[assembly: EdmRelationshipAttribute("DOSBModel", "FK_Fields_Clients", "Clients", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DOSB.Models.Clients), "Fields", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DOSB.Models.Fields), true)]
[assembly: EdmRelationshipAttribute("DOSBModel", "FK_CompletionActivityRelations_Companies", "Companies", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DOSB.Models.Companies), "CompletionActivityRelations", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DOSB.Models.Completion_Activities), true)]
[assembly: EdmRelationshipAttribute("DOSBModel", "FK_CompletionActivities_CompletionTypes", "CompletionTypes", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DOSB.Models.CompletionTypes), "CompletionActivities", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DOSB.Models.RigActivities), true)]
[assembly: EdmRelationshipAttribute("DOSBModel", "FK_CompletionActivities_Rigs", "Rigs", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DOSB.Models.Rigs), "CompletionActivities", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DOSB.Models.RigActivities), true)]
[assembly: EdmRelationshipAttribute("DOSBModel", "FK_CompletionActivities_Wells", "Wells", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DOSB.Models.Wells), "CompletionActivities", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DOSB.Models.RigActivities), true)]
[assembly: EdmRelationshipAttribute("DOSBModel", "FK_CompletionActivityRelations_CompletionActivities", "RigActivities", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DOSB.Models.RigActivities), "CompletionActivities", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DOSB.Models.Completion_Activities), true)]
[assembly: EdmRelationshipAttribute("DOSBModel", "FK_Wells_Fields", "Fields", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DOSB.Models.Fields), "Wells", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DOSB.Models.Wells), true)]
[assembly: EdmRelationshipAttribute("DOSBModel", "FK_Wells_WellTypes", "WellTypes", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DOSB.Models.WellTypes), "Wells", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DOSB.Models.Wells), true)]

#endregion

namespace DOSB.Models
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class DOSBEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new DOSBEntities object using the connection string found in the 'DOSBEntities' section of the application configuration file.
        /// </summary>
        public DOSBEntities() : base("name=DOSBEntities", "DOSBEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new DOSBEntities object.
        /// </summary>
        public DOSBEntities(string connectionString) : base(connectionString, "DOSBEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new DOSBEntities object.
        /// </summary>
        public DOSBEntities(EntityConnection connection) : base(connection, "DOSBEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Employee> Employee
        {
            get
            {
                if ((_Employee == null))
                {
                    _Employee = base.CreateObjectSet<Employee>("Employee");
                }
                return _Employee;
            }
        }
        private ObjectSet<Employee> _Employee;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Segment> Segment
        {
            get
            {
                if ((_Segment == null))
                {
                    _Segment = base.CreateObjectSet<Segment>("Segment");
                }
                return _Segment;
            }
        }
        private ObjectSet<Segment> _Segment;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Torque> Torque
        {
            get
            {
                if ((_Torque == null))
                {
                    _Torque = base.CreateObjectSet<Torque>("Torque");
                }
                return _Torque;
            }
        }
        private ObjectSet<Torque> _Torque;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<WorkshopAssignment> WorkshopAssignment
        {
            get
            {
                if ((_WorkshopAssignment == null))
                {
                    _WorkshopAssignment = base.CreateObjectSet<WorkshopAssignment>("WorkshopAssignment");
                }
                return _WorkshopAssignment;
            }
        }
        private ObjectSet<WorkshopAssignment> _WorkshopAssignment;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<WorkshopDailyActivity> WorkshopDailyActivity
        {
            get
            {
                if ((_WorkshopDailyActivity == null))
                {
                    _WorkshopDailyActivity = base.CreateObjectSet<WorkshopDailyActivity>("WorkshopDailyActivity");
                }
                return _WorkshopDailyActivity;
            }
        }
        private ObjectSet<WorkshopDailyActivity> _WorkshopDailyActivity;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Attachment> Attachment
        {
            get
            {
                if ((_Attachment == null))
                {
                    _Attachment = base.CreateObjectSet<Attachment>("Attachment");
                }
                return _Attachment;
            }
        }
        private ObjectSet<Attachment> _Attachment;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PressureTest> PressureTest
        {
            get
            {
                if ((_PressureTest == null))
                {
                    _PressureTest = base.CreateObjectSet<PressureTest>("PressureTest");
                }
                return _PressureTest;
            }
        }
        private ObjectSet<PressureTest> _PressureTest;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Role> Role
        {
            get
            {
                if ((_Role == null))
                {
                    _Role = base.CreateObjectSet<Role>("Role");
                }
                return _Role;
            }
        }
        private ObjectSet<Role> _Role;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AssemblyType> AssemblyType
        {
            get
            {
                if ((_AssemblyType == null))
                {
                    _AssemblyType = base.CreateObjectSet<AssemblyType>("AssemblyType");
                }
                return _AssemblyType;
            }
        }
        private ObjectSet<AssemblyType> _AssemblyType;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Clients> Clients
        {
            get
            {
                if ((_Clients == null))
                {
                    _Clients = base.CreateObjectSet<Clients>("Clients");
                }
                return _Clients;
            }
        }
        private ObjectSet<Clients> _Clients;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Companies> Companies
        {
            get
            {
                if ((_Companies == null))
                {
                    _Companies = base.CreateObjectSet<Companies>("Companies");
                }
                return _Companies;
            }
        }
        private ObjectSet<Companies> _Companies;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RigActivities> RigActivities
        {
            get
            {
                if ((_RigActivities == null))
                {
                    _RigActivities = base.CreateObjectSet<RigActivities>("RigActivities");
                }
                return _RigActivities;
            }
        }
        private ObjectSet<RigActivities> _RigActivities;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Completion_Activities> CompletionActivities
        {
            get
            {
                if ((_CompletionActivities == null))
                {
                    _CompletionActivities = base.CreateObjectSet<Completion_Activities>("CompletionActivities");
                }
                return _CompletionActivities;
            }
        }
        private ObjectSet<Completion_Activities> _CompletionActivities;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CompletionTypes> CompletionTypes
        {
            get
            {
                if ((_CompletionTypes == null))
                {
                    _CompletionTypes = base.CreateObjectSet<CompletionTypes>("CompletionTypes");
                }
                return _CompletionTypes;
            }
        }
        private ObjectSet<CompletionTypes> _CompletionTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Countries> Countries
        {
            get
            {
                if ((_Countries == null))
                {
                    _Countries = base.CreateObjectSet<Countries>("Countries");
                }
                return _Countries;
            }
        }
        private ObjectSet<Countries> _Countries;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Fields> Fields
        {
            get
            {
                if ((_Fields == null))
                {
                    _Fields = base.CreateObjectSet<Fields>("Fields");
                }
                return _Fields;
            }
        }
        private ObjectSet<Fields> _Fields;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Rigs> Rigs
        {
            get
            {
                if ((_Rigs == null))
                {
                    _Rigs = base.CreateObjectSet<Rigs>("Rigs");
                }
                return _Rigs;
            }
        }
        private ObjectSet<Rigs> _Rigs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Wells> Wells
        {
            get
            {
                if ((_Wells == null))
                {
                    _Wells = base.CreateObjectSet<Wells>("Wells");
                }
                return _Wells;
            }
        }
        private ObjectSet<Wells> _Wells;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<WellTypes> WellTypes
        {
            get
            {
                if ((_WellTypes == null))
                {
                    _WellTypes = base.CreateObjectSet<WellTypes>("WellTypes");
                }
                return _WellTypes;
            }
        }
        private ObjectSet<WellTypes> _WellTypes;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Employee EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEmployee(Employee employee)
        {
            base.AddObject("Employee", employee);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Segment EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSegment(Segment segment)
        {
            base.AddObject("Segment", segment);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Torque EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTorque(Torque torque)
        {
            base.AddObject("Torque", torque);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the WorkshopAssignment EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToWorkshopAssignment(WorkshopAssignment workshopAssignment)
        {
            base.AddObject("WorkshopAssignment", workshopAssignment);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the WorkshopDailyActivity EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToWorkshopDailyActivity(WorkshopDailyActivity workshopDailyActivity)
        {
            base.AddObject("WorkshopDailyActivity", workshopDailyActivity);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Attachment EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAttachment(Attachment attachment)
        {
            base.AddObject("Attachment", attachment);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PressureTest EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPressureTest(PressureTest pressureTest)
        {
            base.AddObject("PressureTest", pressureTest);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Role EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRole(Role role)
        {
            base.AddObject("Role", role);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AssemblyType EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAssemblyType(AssemblyType assemblyType)
        {
            base.AddObject("AssemblyType", assemblyType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Clients EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToClients(Clients clients)
        {
            base.AddObject("Clients", clients);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Companies EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCompanies(Companies companies)
        {
            base.AddObject("Companies", companies);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RigActivities EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRigActivities(RigActivities rigActivities)
        {
            base.AddObject("RigActivities", rigActivities);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CompletionActivities EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCompletionActivities(Completion_Activities completion_Activities)
        {
            base.AddObject("CompletionActivities", completion_Activities);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CompletionTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCompletionTypes(CompletionTypes completionTypes)
        {
            base.AddObject("CompletionTypes", completionTypes);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Countries EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCountries(Countries countries)
        {
            base.AddObject("Countries", countries);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Fields EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFields(Fields fields)
        {
            base.AddObject("Fields", fields);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Rigs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRigs(Rigs rigs)
        {
            base.AddObject("Rigs", rigs);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Wells EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToWells(Wells wells)
        {
            base.AddObject("Wells", wells);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the WellTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToWellTypes(WellTypes wellTypes)
        {
            base.AddObject("WellTypes", wellTypes);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DOSBModel", Name="AssemblyType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AssemblyType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AssemblyType object.
        /// </summary>
        /// <param name="assemblyTypeId">Initial value of the AssemblyTypeId property.</param>
        public static AssemblyType CreateAssemblyType(global::System.Int32 assemblyTypeId)
        {
            AssemblyType assemblyType = new AssemblyType();
            assemblyType.AssemblyTypeId = assemblyTypeId;
            return assemblyType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AssemblyTypeId
        {
            get
            {
                return _AssemblyTypeId;
            }
            set
            {
                if (_AssemblyTypeId != value)
                {
                    OnAssemblyTypeIdChanging(value);
                    ReportPropertyChanging("AssemblyTypeId");
                    _AssemblyTypeId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AssemblyTypeId");
                    OnAssemblyTypeIdChanged();
                }
            }
        }
        private global::System.Int32 _AssemblyTypeId;
        partial void OnAssemblyTypeIdChanging(global::System.Int32 value);
        partial void OnAssemblyTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AssemblyName
        {
            get
            {
                return _AssemblyName;
            }
            set
            {
                OnAssemblyNameChanging(value);
                ReportPropertyChanging("AssemblyName");
                _AssemblyName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AssemblyName");
                OnAssemblyNameChanged();
            }
        }
        private global::System.String _AssemblyName;
        partial void OnAssemblyNameChanging(global::System.String value);
        partial void OnAssemblyNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ComletionType
        {
            get
            {
                return _ComletionType;
            }
            set
            {
                OnComletionTypeChanging(value);
                ReportPropertyChanging("ComletionType");
                _ComletionType = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ComletionType");
                OnComletionTypeChanged();
            }
        }
        private global::System.String _ComletionType;
        partial void OnComletionTypeChanging(global::System.String value);
        partial void OnComletionTypeChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DOSBModel", "FK_CompletionActivityRelations_AssemblyType", "CompletionActivityRelations")]
        public EntityCollection<Completion_Activities> CompletionActivityRelations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Completion_Activities>("DOSBModel.FK_CompletionActivityRelations_AssemblyType", "CompletionActivityRelations");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Completion_Activities>("DOSBModel.FK_CompletionActivityRelations_AssemblyType", "CompletionActivityRelations", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DOSBModel", Name="Attachment")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Attachment : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Attachment object.
        /// </summary>
        /// <param name="attachmentId">Initial value of the AttachmentId property.</param>
        public static Attachment CreateAttachment(global::System.Int32 attachmentId)
        {
            Attachment attachment = new Attachment();
            attachment.AttachmentId = attachmentId;
            return attachment;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AttachmentId
        {
            get
            {
                return _AttachmentId;
            }
            set
            {
                if (_AttachmentId != value)
                {
                    OnAttachmentIdChanging(value);
                    ReportPropertyChanging("AttachmentId");
                    _AttachmentId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AttachmentId");
                    OnAttachmentIdChanged();
                }
            }
        }
        private global::System.Int32 _AttachmentId;
        partial void OnAttachmentIdChanging(global::System.Int32 value);
        partial void OnAttachmentIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AttachableType
        {
            get
            {
                return _AttachableType;
            }
            set
            {
                OnAttachableTypeChanging(value);
                ReportPropertyChanging("AttachableType");
                _AttachableType = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AttachableType");
                OnAttachableTypeChanged();
            }
        }
        private global::System.String _AttachableType;
        partial void OnAttachableTypeChanging(global::System.String value);
        partial void OnAttachableTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> AttachableId
        {
            get
            {
                return _AttachableId;
            }
            set
            {
                OnAttachableIdChanging(value);
                ReportPropertyChanging("AttachableId");
                _AttachableId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AttachableId");
                OnAttachableIdChanged();
            }
        }
        private Nullable<global::System.Int32> _AttachableId;
        partial void OnAttachableIdChanging(Nullable<global::System.Int32> value);
        partial void OnAttachableIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Guid
        {
            get
            {
                return _Guid;
            }
            set
            {
                OnGuidChanging(value);
                ReportPropertyChanging("Guid");
                _Guid = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Guid");
                OnGuidChanged();
            }
        }
        private global::System.String _Guid;
        partial void OnGuidChanging(global::System.String value);
        partial void OnGuidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FileName
        {
            get
            {
                return _FileName;
            }
            set
            {
                OnFileNameChanging(value);
                ReportPropertyChanging("FileName");
                _FileName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FileName");
                OnFileNameChanged();
            }
        }
        private global::System.String _FileName;
        partial void OnFileNameChanging(global::System.String value);
        partial void OnFileNameChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DOSBModel", Name="Clients")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Clients : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Clients object.
        /// </summary>
        /// <param name="clientId">Initial value of the ClientId property.</param>
        public static Clients CreateClients(global::System.Int32 clientId)
        {
            Clients clients = new Clients();
            clients.ClientId = clientId;
            return clients;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ClientId
        {
            get
            {
                return _ClientId;
            }
            set
            {
                if (_ClientId != value)
                {
                    OnClientIdChanging(value);
                    ReportPropertyChanging("ClientId");
                    _ClientId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ClientId");
                    OnClientIdChanged();
                }
            }
        }
        private global::System.Int32 _ClientId;
        partial void OnClientIdChanging(global::System.Int32 value);
        partial void OnClientIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CountryId
        {
            get
            {
                return _CountryId;
            }
            set
            {
                OnCountryIdChanging(value);
                ReportPropertyChanging("CountryId");
                _CountryId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CountryId");
                OnCountryIdChanged();
            }
        }
        private Nullable<global::System.Int32> _CountryId;
        partial void OnCountryIdChanging(Nullable<global::System.Int32> value);
        partial void OnCountryIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DOSBModel", "FK_Clients_Countries", "Countries")]
        public Countries Country
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Countries>("DOSBModel.FK_Clients_Countries", "Countries").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Countries>("DOSBModel.FK_Clients_Countries", "Countries").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Countries> CountryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Countries>("DOSBModel.FK_Clients_Countries", "Countries");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Countries>("DOSBModel.FK_Clients_Countries", "Countries", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DOSBModel", "FK_Fields_Clients", "Fields")]
        public EntityCollection<Fields> Fields
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Fields>("DOSBModel.FK_Fields_Clients", "Fields");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Fields>("DOSBModel.FK_Fields_Clients", "Fields", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DOSBModel", Name="Companies")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Companies : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Companies object.
        /// </summary>
        /// <param name="companyId">Initial value of the CompanyId property.</param>
        public static Companies CreateCompanies(global::System.Int32 companyId)
        {
            Companies companies = new Companies();
            companies.CompanyId = companyId;
            return companies;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CompanyId
        {
            get
            {
                return _CompanyId;
            }
            set
            {
                if (_CompanyId != value)
                {
                    OnCompanyIdChanging(value);
                    ReportPropertyChanging("CompanyId");
                    _CompanyId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CompanyId");
                    OnCompanyIdChanged();
                }
            }
        }
        private global::System.Int32 _CompanyId;
        partial void OnCompanyIdChanging(global::System.Int32 value);
        partial void OnCompanyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ShortName
        {
            get
            {
                return _ShortName;
            }
            set
            {
                OnShortNameChanging(value);
                ReportPropertyChanging("ShortName");
                _ShortName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ShortName");
                OnShortNameChanged();
            }
        }
        private global::System.String _ShortName;
        partial void OnShortNameChanging(global::System.String value);
        partial void OnShortNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FullName
        {
            get
            {
                return _FullName;
            }
            set
            {
                OnFullNameChanging(value);
                ReportPropertyChanging("FullName");
                _FullName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FullName");
                OnFullNameChanged();
            }
        }
        private global::System.String _FullName;
        partial void OnFullNameChanging(global::System.String value);
        partial void OnFullNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DOSBModel", "FK_CompletionActivityRelations_Companies", "CompletionActivityRelations")]
        public EntityCollection<Completion_Activities> CompletionActivityRelations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Completion_Activities>("DOSBModel.FK_CompletionActivityRelations_Companies", "CompletionActivityRelations");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Completion_Activities>("DOSBModel.FK_CompletionActivityRelations_Companies", "CompletionActivityRelations", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DOSBModel", Name="Completion_Activities")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Completion_Activities : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Completion_Activities object.
        /// </summary>
        /// <param name="rigActivityId">Initial value of the RigActivityId property.</param>
        /// <param name="companyId">Initial value of the CompanyId property.</param>
        /// <param name="assemblyTypeId">Initial value of the AssemblyTypeId property.</param>
        public static Completion_Activities CreateCompletion_Activities(global::System.Int32 rigActivityId, global::System.Int32 companyId, global::System.Int32 assemblyTypeId)
        {
            Completion_Activities completion_Activities = new Completion_Activities();
            completion_Activities.RigActivityId = rigActivityId;
            completion_Activities.CompanyId = companyId;
            completion_Activities.AssemblyTypeId = assemblyTypeId;
            return completion_Activities;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RigActivityId
        {
            get
            {
                return _RigActivityId;
            }
            set
            {
                if (_RigActivityId != value)
                {
                    OnRigActivityIdChanging(value);
                    ReportPropertyChanging("RigActivityId");
                    _RigActivityId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RigActivityId");
                    OnRigActivityIdChanged();
                }
            }
        }
        private global::System.Int32 _RigActivityId;
        partial void OnRigActivityIdChanging(global::System.Int32 value);
        partial void OnRigActivityIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CompanyId
        {
            get
            {
                return _CompanyId;
            }
            set
            {
                if (_CompanyId != value)
                {
                    OnCompanyIdChanging(value);
                    ReportPropertyChanging("CompanyId");
                    _CompanyId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CompanyId");
                    OnCompanyIdChanged();
                }
            }
        }
        private global::System.Int32 _CompanyId;
        partial void OnCompanyIdChanging(global::System.Int32 value);
        partial void OnCompanyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AssemblyTypeId
        {
            get
            {
                return _AssemblyTypeId;
            }
            set
            {
                if (_AssemblyTypeId != value)
                {
                    OnAssemblyTypeIdChanging(value);
                    ReportPropertyChanging("AssemblyTypeId");
                    _AssemblyTypeId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AssemblyTypeId");
                    OnAssemblyTypeIdChanged();
                }
            }
        }
        private global::System.Int32 _AssemblyTypeId;
        partial void OnAssemblyTypeIdChanging(global::System.Int32 value);
        partial void OnAssemblyTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> StartAt
        {
            get
            {
                return _StartAt;
            }
            set
            {
                OnStartAtChanging(value);
                ReportPropertyChanging("StartAt");
                _StartAt = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StartAt");
                OnStartAtChanged();
            }
        }
        private Nullable<global::System.DateTime> _StartAt;
        partial void OnStartAtChanging(Nullable<global::System.DateTime> value);
        partial void OnStartAtChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> FinishAt
        {
            get
            {
                return _FinishAt;
            }
            set
            {
                OnFinishAtChanging(value);
                ReportPropertyChanging("FinishAt");
                _FinishAt = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FinishAt");
                OnFinishAtChanged();
            }
        }
        private Nullable<global::System.DateTime> _FinishAt;
        partial void OnFinishAtChanging(Nullable<global::System.DateTime> value);
        partial void OnFinishAtChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comment
        {
            get
            {
                return _Comment;
            }
            set
            {
                OnCommentChanging(value);
                ReportPropertyChanging("Comment");
                _Comment = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comment");
                OnCommentChanged();
            }
        }
        private global::System.String _Comment;
        partial void OnCommentChanging(global::System.String value);
        partial void OnCommentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ShowAt
        {
            get
            {
                return _ShowAt;
            }
            set
            {
                OnShowAtChanging(value);
                ReportPropertyChanging("ShowAt");
                _ShowAt = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ShowAt");
                OnShowAtChanged();
            }
        }
        private Nullable<global::System.DateTime> _ShowAt;
        partial void OnShowAtChanging(Nullable<global::System.DateTime> value);
        partial void OnShowAtChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DOSBModel", "FK_CompletionActivityRelations_AssemblyType", "AssemblyType")]
        public AssemblyType AssemblyType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AssemblyType>("DOSBModel.FK_CompletionActivityRelations_AssemblyType", "AssemblyType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AssemblyType>("DOSBModel.FK_CompletionActivityRelations_AssemblyType", "AssemblyType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AssemblyType> AssemblyTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AssemblyType>("DOSBModel.FK_CompletionActivityRelations_AssemblyType", "AssemblyType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<AssemblyType>("DOSBModel.FK_CompletionActivityRelations_AssemblyType", "AssemblyType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DOSBModel", "FK_CompletionActivityRelations_Companies", "Companies")]
        public Companies Company
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Companies>("DOSBModel.FK_CompletionActivityRelations_Companies", "Companies").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Companies>("DOSBModel.FK_CompletionActivityRelations_Companies", "Companies").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Companies> CompanyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Companies>("DOSBModel.FK_CompletionActivityRelations_Companies", "Companies");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Companies>("DOSBModel.FK_CompletionActivityRelations_Companies", "Companies", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DOSBModel", "FK_CompletionActivityRelations_CompletionActivities", "RigActivities")]
        public RigActivities RigActivity
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RigActivities>("DOSBModel.FK_CompletionActivityRelations_CompletionActivities", "RigActivities").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RigActivities>("DOSBModel.FK_CompletionActivityRelations_CompletionActivities", "RigActivities").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<RigActivities> RigActivityReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RigActivities>("DOSBModel.FK_CompletionActivityRelations_CompletionActivities", "RigActivities");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<RigActivities>("DOSBModel.FK_CompletionActivityRelations_CompletionActivities", "RigActivities", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DOSBModel", Name="CompletionTypes")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CompletionTypes : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CompletionTypes object.
        /// </summary>
        /// <param name="completionTypeId">Initial value of the CompletionTypeId property.</param>
        public static CompletionTypes CreateCompletionTypes(global::System.Int32 completionTypeId)
        {
            CompletionTypes completionTypes = new CompletionTypes();
            completionTypes.CompletionTypeId = completionTypeId;
            return completionTypes;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CompletionTypeId
        {
            get
            {
                return _CompletionTypeId;
            }
            set
            {
                if (_CompletionTypeId != value)
                {
                    OnCompletionTypeIdChanging(value);
                    ReportPropertyChanging("CompletionTypeId");
                    _CompletionTypeId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CompletionTypeId");
                    OnCompletionTypeIdChanged();
                }
            }
        }
        private global::System.Int32 _CompletionTypeId;
        partial void OnCompletionTypeIdChanging(global::System.Int32 value);
        partial void OnCompletionTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DOSBModel", "FK_CompletionActivities_CompletionTypes", "CompletionActivities")]
        public EntityCollection<RigActivities> CompletionActivities
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RigActivities>("DOSBModel.FK_CompletionActivities_CompletionTypes", "CompletionActivities");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RigActivities>("DOSBModel.FK_CompletionActivities_CompletionTypes", "CompletionActivities", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DOSBModel", Name="Countries")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Countries : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Countries object.
        /// </summary>
        /// <param name="countryId">Initial value of the CountryId property.</param>
        public static Countries CreateCountries(global::System.Int32 countryId)
        {
            Countries countries = new Countries();
            countries.CountryId = countryId;
            return countries;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CountryId
        {
            get
            {
                return _CountryId;
            }
            set
            {
                if (_CountryId != value)
                {
                    OnCountryIdChanging(value);
                    ReportPropertyChanging("CountryId");
                    _CountryId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CountryId");
                    OnCountryIdChanged();
                }
            }
        }
        private global::System.Int32 _CountryId;
        partial void OnCountryIdChanging(global::System.Int32 value);
        partial void OnCountryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DOSBModel", "FK_Clients_Countries", "Clients")]
        public EntityCollection<Clients> Clients
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Clients>("DOSBModel.FK_Clients_Countries", "Clients");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Clients>("DOSBModel.FK_Clients_Countries", "Clients", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DOSBModel", Name="Employee")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Employee : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Employee object.
        /// </summary>
        /// <param name="employeeId">Initial value of the EmployeeId property.</param>
        public static Employee CreateEmployee(global::System.Int32 employeeId)
        {
            Employee employee = new Employee();
            employee.EmployeeId = employeeId;
            return employee;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EmployeeId
        {
            get
            {
                return _EmployeeId;
            }
            set
            {
                if (_EmployeeId != value)
                {
                    OnEmployeeIdChanging(value);
                    ReportPropertyChanging("EmployeeId");
                    _EmployeeId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("EmployeeId");
                    OnEmployeeIdChanged();
                }
            }
        }
        private global::System.Int32 _EmployeeId;
        partial void OnEmployeeIdChanging(global::System.Int32 value);
        partial void OnEmployeeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LDAP
        {
            get
            {
                return _LDAP;
            }
            set
            {
                OnLDAPChanging(value);
                ReportPropertyChanging("LDAP");
                _LDAP = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LDAP");
                OnLDAPChanged();
            }
        }
        private global::System.String _LDAP;
        partial void OnLDAPChanging(global::System.String value);
        partial void OnLDAPChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.String _Status;
        partial void OnStatusChanging(global::System.String value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SegmentId
        {
            get
            {
                return _SegmentId;
            }
            set
            {
                OnSegmentIdChanging(value);
                ReportPropertyChanging("SegmentId");
                _SegmentId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SegmentId");
                OnSegmentIdChanged();
            }
        }
        private Nullable<global::System.Int32> _SegmentId;
        partial void OnSegmentIdChanging(Nullable<global::System.Int32> value);
        partial void OnSegmentIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] Avatar
        {
            get
            {
                return StructuralObject.GetValidValue(_Avatar);
            }
            set
            {
                OnAvatarChanging(value);
                ReportPropertyChanging("Avatar");
                _Avatar = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Avatar");
                OnAvatarChanged();
            }
        }
        private global::System.Byte[] _Avatar;
        partial void OnAvatarChanging(global::System.Byte[] value);
        partial void OnAvatarChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String GivenName
        {
            get
            {
                return _GivenName;
            }
            set
            {
                OnGivenNameChanging(value);
                ReportPropertyChanging("GivenName");
                _GivenName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("GivenName");
                OnGivenNameChanged();
            }
        }
        private global::System.String _GivenName;
        partial void OnGivenNameChanging(global::System.String value);
        partial void OnGivenNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SurName
        {
            get
            {
                return _SurName;
            }
            set
            {
                OnSurNameChanging(value);
                ReportPropertyChanging("SurName");
                _SurName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SurName");
                OnSurNameChanged();
            }
        }
        private global::System.String _SurName;
        partial void OnSurNameChanging(global::System.String value);
        partial void OnSurNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Mobile
        {
            get
            {
                return _Mobile;
            }
            set
            {
                OnMobileChanging(value);
                ReportPropertyChanging("Mobile");
                _Mobile = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Mobile");
                OnMobileChanged();
            }
        }
        private global::System.String _Mobile;
        partial void OnMobileChanging(global::System.String value);
        partial void OnMobileChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PersonalMobile
        {
            get
            {
                return _PersonalMobile;
            }
            set
            {
                OnPersonalMobileChanging(value);
                ReportPropertyChanging("PersonalMobile");
                _PersonalMobile = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PersonalMobile");
                OnPersonalMobileChanged();
            }
        }
        private global::System.String _PersonalMobile;
        partial void OnPersonalMobileChanging(global::System.String value);
        partial void OnPersonalMobileChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AramcoID
        {
            get
            {
                return _AramcoID;
            }
            set
            {
                OnAramcoIDChanging(value);
                ReportPropertyChanging("AramcoID");
                _AramcoID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AramcoID");
                OnAramcoIDChanged();
            }
        }
        private global::System.String _AramcoID;
        partial void OnAramcoIDChanging(global::System.String value);
        partial void OnAramcoIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> AramcoIdExpDate
        {
            get
            {
                return _AramcoIdExpDate;
            }
            set
            {
                OnAramcoIdExpDateChanging(value);
                ReportPropertyChanging("AramcoIdExpDate");
                _AramcoIdExpDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AramcoIdExpDate");
                OnAramcoIdExpDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _AramcoIdExpDate;
        partial void OnAramcoIdExpDateChanging(Nullable<global::System.DateTime> value);
        partial void OnAramcoIdExpDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> H2SExpDate
        {
            get
            {
                return _H2SExpDate;
            }
            set
            {
                OnH2SExpDateChanging(value);
                ReportPropertyChanging("H2SExpDate");
                _H2SExpDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("H2SExpDate");
                OnH2SExpDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _H2SExpDate;
        partial void OnH2SExpDateChanging(Nullable<global::System.DateTime> value);
        partial void OnH2SExpDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> HUETExpDate
        {
            get
            {
                return _HUETExpDate;
            }
            set
            {
                OnHUETExpDateChanging(value);
                ReportPropertyChanging("HUETExpDate");
                _HUETExpDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HUETExpDate");
                OnHUETExpDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _HUETExpDate;
        partial void OnHUETExpDateChanging(Nullable<global::System.DateTime> value);
        partial void OnHUETExpDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String GIN
        {
            get
            {
                return _GIN;
            }
            set
            {
                OnGINChanging(value);
                ReportPropertyChanging("GIN");
                _GIN = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("GIN");
                OnGINChanged();
            }
        }
        private global::System.String _GIN;
        partial void OnGINChanging(global::System.String value);
        partial void OnGINChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DOSBModel", "FK_Employee_Segment", "Segment")]
        public Segment Segment
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Segment>("DOSBModel.FK_Employee_Segment", "Segment").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Segment>("DOSBModel.FK_Employee_Segment", "Segment").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Segment> SegmentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Segment>("DOSBModel.FK_Employee_Segment", "Segment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Segment>("DOSBModel.FK_Employee_Segment", "Segment", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DOSBModel", "FK_Torque_Employee", "Torque")]
        public EntityCollection<Torque> Torques
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Torque>("DOSBModel.FK_Torque_Employee", "Torque");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Torque>("DOSBModel.FK_Torque_Employee", "Torque", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DOSBModel", "FK_WorkshopAssignment_Employee", "WorkshopAssignment")]
        public EntityCollection<WorkshopAssignment> WorkshopAssignments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<WorkshopAssignment>("DOSBModel.FK_WorkshopAssignment_Employee", "WorkshopAssignment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<WorkshopAssignment>("DOSBModel.FK_WorkshopAssignment_Employee", "WorkshopAssignment", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DOSBModel", "FK_PressureTest_Employee", "PressureTest")]
        public EntityCollection<PressureTest> PressureTests
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PressureTest>("DOSBModel.FK_PressureTest_Employee", "PressureTest");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PressureTest>("DOSBModel.FK_PressureTest_Employee", "PressureTest", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DOSBModel", "FK_PressureTest_Approver", "PressureTest")]
        public EntityCollection<PressureTest> ApprovedPressureTests
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PressureTest>("DOSBModel.FK_PressureTest_Approver", "PressureTest");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PressureTest>("DOSBModel.FK_PressureTest_Approver", "PressureTest", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DOSBModel", "EmployeeRoles", "Role")]
        public EntityCollection<Role> Roles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Role>("DOSBModel.EmployeeRoles", "Role");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Role>("DOSBModel.EmployeeRoles", "Role", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DOSBModel", "FK_Torque_Approver", "Torque")]
        public EntityCollection<Torque> ApprovedTorques
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Torque>("DOSBModel.FK_Torque_Approver", "Torque");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Torque>("DOSBModel.FK_Torque_Approver", "Torque", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DOSBModel", Name="Fields")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Fields : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Fields object.
        /// </summary>
        /// <param name="fieldId">Initial value of the FieldId property.</param>
        public static Fields CreateFields(global::System.Int32 fieldId)
        {
            Fields fields = new Fields();
            fields.FieldId = fieldId;
            return fields;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FieldId
        {
            get
            {
                return _FieldId;
            }
            set
            {
                if (_FieldId != value)
                {
                    OnFieldIdChanging(value);
                    ReportPropertyChanging("FieldId");
                    _FieldId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("FieldId");
                    OnFieldIdChanged();
                }
            }
        }
        private global::System.Int32 _FieldId;
        partial void OnFieldIdChanging(global::System.Int32 value);
        partial void OnFieldIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ClientId
        {
            get
            {
                return _ClientId;
            }
            set
            {
                OnClientIdChanging(value);
                ReportPropertyChanging("ClientId");
                _ClientId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ClientId");
                OnClientIdChanged();
            }
        }
        private Nullable<global::System.Int32> _ClientId;
        partial void OnClientIdChanging(Nullable<global::System.Int32> value);
        partial void OnClientIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DOSBModel", "FK_Fields_Clients", "Clients")]
        public Clients Client
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Clients>("DOSBModel.FK_Fields_Clients", "Clients").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Clients>("DOSBModel.FK_Fields_Clients", "Clients").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Clients> ClientReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Clients>("DOSBModel.FK_Fields_Clients", "Clients");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Clients>("DOSBModel.FK_Fields_Clients", "Clients", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DOSBModel", "FK_Wells_Fields", "Wells")]
        public EntityCollection<Wells> Wells
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Wells>("DOSBModel.FK_Wells_Fields", "Wells");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Wells>("DOSBModel.FK_Wells_Fields", "Wells", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DOSBModel", Name="PressureTest")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PressureTest : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PressureTest object.
        /// </summary>
        /// <param name="pressureTestId">Initial value of the PressureTestId property.</param>
        public static PressureTest CreatePressureTest(global::System.Int32 pressureTestId)
        {
            PressureTest pressureTest = new PressureTest();
            pressureTest.PressureTestId = pressureTestId;
            return pressureTest;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PressureTestId
        {
            get
            {
                return _PressureTestId;
            }
            set
            {
                if (_PressureTestId != value)
                {
                    OnPressureTestIdChanging(value);
                    ReportPropertyChanging("PressureTestId");
                    _PressureTestId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PressureTestId");
                    OnPressureTestIdChanged();
                }
            }
        }
        private global::System.Int32 _PressureTestId;
        partial void OnPressureTestIdChanging(global::System.Int32 value);
        partial void OnPressureTestIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PartNumber
        {
            get
            {
                return _PartNumber;
            }
            set
            {
                OnPartNumberChanging(value);
                ReportPropertyChanging("PartNumber");
                _PartNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PartNumber");
                OnPartNumberChanged();
            }
        }
        private global::System.String _PartNumber;
        partial void OnPartNumberChanging(global::System.String value);
        partial void OnPartNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SerialNumber
        {
            get
            {
                return _SerialNumber;
            }
            set
            {
                OnSerialNumberChanging(value);
                ReportPropertyChanging("SerialNumber");
                _SerialNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SerialNumber");
                OnSerialNumberChanged();
            }
        }
        private global::System.String _SerialNumber;
        partial void OnSerialNumberChanging(global::System.String value);
        partial void OnSerialNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TestBy
        {
            get
            {
                return _TestBy;
            }
            set
            {
                OnTestByChanging(value);
                ReportPropertyChanging("TestBy");
                _TestBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TestBy");
                OnTestByChanged();
            }
        }
        private Nullable<global::System.Int32> _TestBy;
        partial void OnTestByChanging(Nullable<global::System.Int32> value);
        partial void OnTestByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> StartAt
        {
            get
            {
                return _StartAt;
            }
            set
            {
                OnStartAtChanging(value);
                ReportPropertyChanging("StartAt");
                _StartAt = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StartAt");
                OnStartAtChanged();
            }
        }
        private Nullable<global::System.DateTime> _StartAt;
        partial void OnStartAtChanging(Nullable<global::System.DateTime> value);
        partial void OnStartAtChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> FinishAt
        {
            get
            {
                return _FinishAt;
            }
            set
            {
                OnFinishAtChanging(value);
                ReportPropertyChanging("FinishAt");
                _FinishAt = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FinishAt");
                OnFinishAtChanged();
            }
        }
        private Nullable<global::System.DateTime> _FinishAt;
        partial void OnFinishAtChanging(Nullable<global::System.DateTime> value);
        partial void OnFinishAtChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Defect
        {
            get
            {
                return _Defect;
            }
            set
            {
                OnDefectChanging(value);
                ReportPropertyChanging("Defect");
                _Defect = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Defect");
                OnDefectChanged();
            }
        }
        private Nullable<global::System.Int32> _Defect;
        partial void OnDefectChanging(Nullable<global::System.Int32> value);
        partial void OnDefectChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comment
        {
            get
            {
                return _Comment;
            }
            set
            {
                OnCommentChanging(value);
                ReportPropertyChanging("Comment");
                _Comment = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comment");
                OnCommentChanged();
            }
        }
        private global::System.String _Comment;
        partial void OnCommentChanging(global::System.String value);
        partial void OnCommentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AssemblyType
        {
            get
            {
                return _AssemblyType;
            }
            set
            {
                OnAssemblyTypeChanging(value);
                ReportPropertyChanging("AssemblyType");
                _AssemblyType = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AssemblyType");
                OnAssemblyTypeChanged();
            }
        }
        private global::System.String _AssemblyType;
        partial void OnAssemblyTypeChanging(global::System.String value);
        partial void OnAssemblyTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ApprovedBy
        {
            get
            {
                return _ApprovedBy;
            }
            set
            {
                OnApprovedByChanging(value);
                ReportPropertyChanging("ApprovedBy");
                _ApprovedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ApprovedBy");
                OnApprovedByChanged();
            }
        }
        private Nullable<global::System.Int32> _ApprovedBy;
        partial void OnApprovedByChanging(Nullable<global::System.Int32> value);
        partial void OnApprovedByChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DOSBModel", "FK_PressureTest_Employee", "Employee")]
        public Employee Employee
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("DOSBModel.FK_PressureTest_Employee", "Employee").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("DOSBModel.FK_PressureTest_Employee", "Employee").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Employee> EmployeeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("DOSBModel.FK_PressureTest_Employee", "Employee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Employee>("DOSBModel.FK_PressureTest_Employee", "Employee", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DOSBModel", "FK_PressureTest_Approver", "Employee")]
        public Employee Approver
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("DOSBModel.FK_PressureTest_Approver", "Employee").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("DOSBModel.FK_PressureTest_Approver", "Employee").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Employee> ApproverReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("DOSBModel.FK_PressureTest_Approver", "Employee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Employee>("DOSBModel.FK_PressureTest_Approver", "Employee", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DOSBModel", Name="RigActivities")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RigActivities : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RigActivities object.
        /// </summary>
        /// <param name="activityId">Initial value of the ActivityId property.</param>
        public static RigActivities CreateRigActivities(global::System.Int32 activityId)
        {
            RigActivities rigActivities = new RigActivities();
            rigActivities.ActivityId = activityId;
            return rigActivities;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ActivityId
        {
            get
            {
                return _ActivityId;
            }
            set
            {
                if (_ActivityId != value)
                {
                    OnActivityIdChanging(value);
                    ReportPropertyChanging("ActivityId");
                    _ActivityId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ActivityId");
                    OnActivityIdChanged();
                }
            }
        }
        private global::System.Int32 _ActivityId;
        partial void OnActivityIdChanging(global::System.Int32 value);
        partial void OnActivityIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> RigId
        {
            get
            {
                return _RigId;
            }
            set
            {
                OnRigIdChanging(value);
                ReportPropertyChanging("RigId");
                _RigId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RigId");
                OnRigIdChanged();
            }
        }
        private Nullable<global::System.Int32> _RigId;
        partial void OnRigIdChanging(Nullable<global::System.Int32> value);
        partial void OnRigIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> WellId
        {
            get
            {
                return _WellId;
            }
            set
            {
                OnWellIdChanging(value);
                ReportPropertyChanging("WellId");
                _WellId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("WellId");
                OnWellIdChanged();
            }
        }
        private Nullable<global::System.Int32> _WellId;
        partial void OnWellIdChanging(Nullable<global::System.Int32> value);
        partial void OnWellIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CompletionTypeId
        {
            get
            {
                return _CompletionTypeId;
            }
            set
            {
                OnCompletionTypeIdChanging(value);
                ReportPropertyChanging("CompletionTypeId");
                _CompletionTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CompletionTypeId");
                OnCompletionTypeIdChanged();
            }
        }
        private Nullable<global::System.Int32> _CompletionTypeId;
        partial void OnCompletionTypeIdChanging(Nullable<global::System.Int32> value);
        partial void OnCompletionTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comment
        {
            get
            {
                return _Comment;
            }
            set
            {
                OnCommentChanging(value);
                ReportPropertyChanging("Comment");
                _Comment = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comment");
                OnCommentChanged();
            }
        }
        private global::System.String _Comment;
        partial void OnCommentChanging(global::System.String value);
        partial void OnCommentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> StartAt
        {
            get
            {
                return _StartAt;
            }
            set
            {
                OnStartAtChanging(value);
                ReportPropertyChanging("StartAt");
                _StartAt = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StartAt");
                OnStartAtChanged();
            }
        }
        private Nullable<global::System.DateTime> _StartAt;
        partial void OnStartAtChanging(Nullable<global::System.DateTime> value);
        partial void OnStartAtChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> FinishAt
        {
            get
            {
                return _FinishAt;
            }
            set
            {
                OnFinishAtChanging(value);
                ReportPropertyChanging("FinishAt");
                _FinishAt = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FinishAt");
                OnFinishAtChanged();
            }
        }
        private Nullable<global::System.DateTime> _FinishAt;
        partial void OnFinishAtChanging(Nullable<global::System.DateTime> value);
        partial void OnFinishAtChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ShowAt
        {
            get
            {
                return _ShowAt;
            }
            set
            {
                OnShowAtChanging(value);
                ReportPropertyChanging("ShowAt");
                _ShowAt = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ShowAt");
                OnShowAtChanged();
            }
        }
        private Nullable<global::System.DateTime> _ShowAt;
        partial void OnShowAtChanging(Nullable<global::System.DateTime> value);
        partial void OnShowAtChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DOSBModel", "FK_CompletionActivities_CompletionTypes", "CompletionTypes")]
        public CompletionTypes CompletionType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CompletionTypes>("DOSBModel.FK_CompletionActivities_CompletionTypes", "CompletionTypes").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CompletionTypes>("DOSBModel.FK_CompletionActivities_CompletionTypes", "CompletionTypes").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CompletionTypes> CompletionTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CompletionTypes>("DOSBModel.FK_CompletionActivities_CompletionTypes", "CompletionTypes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CompletionTypes>("DOSBModel.FK_CompletionActivities_CompletionTypes", "CompletionTypes", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DOSBModel", "FK_CompletionActivities_Rigs", "Rigs")]
        public Rigs Rig
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Rigs>("DOSBModel.FK_CompletionActivities_Rigs", "Rigs").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Rigs>("DOSBModel.FK_CompletionActivities_Rigs", "Rigs").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Rigs> RigReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Rigs>("DOSBModel.FK_CompletionActivities_Rigs", "Rigs");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Rigs>("DOSBModel.FK_CompletionActivities_Rigs", "Rigs", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DOSBModel", "FK_CompletionActivities_Wells", "Wells")]
        public Wells Well
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Wells>("DOSBModel.FK_CompletionActivities_Wells", "Wells").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Wells>("DOSBModel.FK_CompletionActivities_Wells", "Wells").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Wells> WellReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Wells>("DOSBModel.FK_CompletionActivities_Wells", "Wells");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Wells>("DOSBModel.FK_CompletionActivities_Wells", "Wells", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DOSBModel", "FK_CompletionActivityRelations_CompletionActivities", "CompletionActivities")]
        public EntityCollection<Completion_Activities> CompletionActivities
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Completion_Activities>("DOSBModel.FK_CompletionActivityRelations_CompletionActivities", "CompletionActivities");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Completion_Activities>("DOSBModel.FK_CompletionActivityRelations_CompletionActivities", "CompletionActivities", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DOSBModel", Name="Rigs")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Rigs : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Rigs object.
        /// </summary>
        /// <param name="rigId">Initial value of the RigId property.</param>
        public static Rigs CreateRigs(global::System.Int32 rigId)
        {
            Rigs rigs = new Rigs();
            rigs.RigId = rigId;
            return rigs;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RigId
        {
            get
            {
                return _RigId;
            }
            set
            {
                if (_RigId != value)
                {
                    OnRigIdChanging(value);
                    ReportPropertyChanging("RigId");
                    _RigId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RigId");
                    OnRigIdChanged();
                }
            }
        }
        private global::System.Int32 _RigId;
        partial void OnRigIdChanging(global::System.Int32 value);
        partial void OnRigIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Type
        {
            get
            {
                return _Type;
            }
            set
            {
                OnTypeChanging(value);
                ReportPropertyChanging("Type");
                _Type = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Type");
                OnTypeChanged();
            }
        }
        private global::System.String _Type;
        partial void OnTypeChanging(global::System.String value);
        partial void OnTypeChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DOSBModel", "FK_CompletionActivities_Rigs", "CompletionActivities")]
        public EntityCollection<RigActivities> CompletionActivities
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RigActivities>("DOSBModel.FK_CompletionActivities_Rigs", "CompletionActivities");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RigActivities>("DOSBModel.FK_CompletionActivities_Rigs", "CompletionActivities", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DOSBModel", Name="Role")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Role : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Role object.
        /// </summary>
        /// <param name="roleId">Initial value of the RoleId property.</param>
        public static Role CreateRole(global::System.Int32 roleId)
        {
            Role role = new Role();
            role.RoleId = roleId;
            return role;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RoleId
        {
            get
            {
                return _RoleId;
            }
            set
            {
                if (_RoleId != value)
                {
                    OnRoleIdChanging(value);
                    ReportPropertyChanging("RoleId");
                    _RoleId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RoleId");
                    OnRoleIdChanged();
                }
            }
        }
        private global::System.Int32 _RoleId;
        partial void OnRoleIdChanging(global::System.Int32 value);
        partial void OnRoleIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FullName
        {
            get
            {
                return _FullName;
            }
            set
            {
                OnFullNameChanging(value);
                ReportPropertyChanging("FullName");
                _FullName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FullName");
                OnFullNameChanged();
            }
        }
        private global::System.String _FullName;
        partial void OnFullNameChanging(global::System.String value);
        partial void OnFullNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LDAPJobCode
        {
            get
            {
                return _LDAPJobCode;
            }
            set
            {
                OnLDAPJobCodeChanging(value);
                ReportPropertyChanging("LDAPJobCode");
                _LDAPJobCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LDAPJobCode");
                OnLDAPJobCodeChanged();
            }
        }
        private global::System.String _LDAPJobCode;
        partial void OnLDAPJobCodeChanging(global::System.String value);
        partial void OnLDAPJobCodeChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DOSBModel", "EmployeeRoles", "Employee")]
        public EntityCollection<Employee> Employees
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Employee>("DOSBModel.EmployeeRoles", "Employee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Employee>("DOSBModel.EmployeeRoles", "Employee", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DOSBModel", Name="Segment")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Segment : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Segment object.
        /// </summary>
        /// <param name="segmentId">Initial value of the SegmentId property.</param>
        /// <param name="parentId">Initial value of the ParentId property.</param>
        public static Segment CreateSegment(global::System.Int32 segmentId, global::System.Int32 parentId)
        {
            Segment segment = new Segment();
            segment.SegmentId = segmentId;
            segment.ParentId = parentId;
            return segment;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SegmentId
        {
            get
            {
                return _SegmentId;
            }
            set
            {
                if (_SegmentId != value)
                {
                    OnSegmentIdChanging(value);
                    ReportPropertyChanging("SegmentId");
                    _SegmentId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SegmentId");
                    OnSegmentIdChanged();
                }
            }
        }
        private global::System.Int32 _SegmentId;
        partial void OnSegmentIdChanging(global::System.Int32 value);
        partial void OnSegmentIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FullName
        {
            get
            {
                return _FullName;
            }
            set
            {
                OnFullNameChanging(value);
                ReportPropertyChanging("FullName");
                _FullName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FullName");
                OnFullNameChanged();
            }
        }
        private global::System.String _FullName;
        partial void OnFullNameChanging(global::System.String value);
        partial void OnFullNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ParentId
        {
            get
            {
                return _ParentId;
            }
            set
            {
                OnParentIdChanging(value);
                ReportPropertyChanging("ParentId");
                _ParentId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ParentId");
                OnParentIdChanged();
            }
        }
        private global::System.Int32 _ParentId;
        partial void OnParentIdChanging(global::System.Int32 value);
        partial void OnParentIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BusinessCategory
        {
            get
            {
                return _BusinessCategory;
            }
            set
            {
                OnBusinessCategoryChanging(value);
                ReportPropertyChanging("BusinessCategory");
                _BusinessCategory = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BusinessCategory");
                OnBusinessCategoryChanged();
            }
        }
        private global::System.String _BusinessCategory;
        partial void OnBusinessCategoryChanging(global::System.String value);
        partial void OnBusinessCategoryChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DOSBModel", "FK_Employee_Segment", "Employee")]
        public EntityCollection<Employee> Employee
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Employee>("DOSBModel.FK_Employee_Segment", "Employee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Employee>("DOSBModel.FK_Employee_Segment", "Employee", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DOSBModel", "FK_Segment_Parent", "Segment1")]
        public EntityCollection<Segment> Segment1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Segment>("DOSBModel.FK_Segment_Parent", "Segment1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Segment>("DOSBModel.FK_Segment_Parent", "Segment1", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DOSBModel", "FK_Segment_Parent", "Segment")]
        public Segment Segment2
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Segment>("DOSBModel.FK_Segment_Parent", "Segment").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Segment>("DOSBModel.FK_Segment_Parent", "Segment").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Segment> Segment2Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Segment>("DOSBModel.FK_Segment_Parent", "Segment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Segment>("DOSBModel.FK_Segment_Parent", "Segment", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DOSBModel", Name="Torque")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Torque : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Torque object.
        /// </summary>
        /// <param name="torqueId">Initial value of the TorqueId property.</param>
        /// <param name="serialNumber">Initial value of the SerialNumber property.</param>
        public static Torque CreateTorque(global::System.Int32 torqueId, global::System.String serialNumber)
        {
            Torque torque = new Torque();
            torque.TorqueId = torqueId;
            torque.SerialNumber = serialNumber;
            return torque;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TorqueId
        {
            get
            {
                return _TorqueId;
            }
            set
            {
                if (_TorqueId != value)
                {
                    OnTorqueIdChanging(value);
                    ReportPropertyChanging("TorqueId");
                    _TorqueId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TorqueId");
                    OnTorqueIdChanged();
                }
            }
        }
        private global::System.Int32 _TorqueId;
        partial void OnTorqueIdChanging(global::System.Int32 value);
        partial void OnTorqueIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PartNumber
        {
            get
            {
                return _PartNumber;
            }
            set
            {
                OnPartNumberChanging(value);
                ReportPropertyChanging("PartNumber");
                _PartNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PartNumber");
                OnPartNumberChanged();
            }
        }
        private global::System.String _PartNumber;
        partial void OnPartNumberChanging(global::System.String value);
        partial void OnPartNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SerialNumber
        {
            get
            {
                return _SerialNumber;
            }
            set
            {
                OnSerialNumberChanging(value);
                ReportPropertyChanging("SerialNumber");
                _SerialNumber = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SerialNumber");
                OnSerialNumberChanged();
            }
        }
        private global::System.String _SerialNumber;
        partial void OnSerialNumberChanging(global::System.String value);
        partial void OnSerialNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TorqueBy
        {
            get
            {
                return _TorqueBy;
            }
            set
            {
                OnTorqueByChanging(value);
                ReportPropertyChanging("TorqueBy");
                _TorqueBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TorqueBy");
                OnTorqueByChanged();
            }
        }
        private Nullable<global::System.Int32> _TorqueBy;
        partial void OnTorqueByChanging(Nullable<global::System.Int32> value);
        partial void OnTorqueByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> StartAt
        {
            get
            {
                return _StartAt;
            }
            set
            {
                OnStartAtChanging(value);
                ReportPropertyChanging("StartAt");
                _StartAt = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StartAt");
                OnStartAtChanged();
            }
        }
        private Nullable<global::System.DateTime> _StartAt;
        partial void OnStartAtChanging(Nullable<global::System.DateTime> value);
        partial void OnStartAtChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> FinishAt
        {
            get
            {
                return _FinishAt;
            }
            set
            {
                OnFinishAtChanging(value);
                ReportPropertyChanging("FinishAt");
                _FinishAt = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FinishAt");
                OnFinishAtChanged();
            }
        }
        private Nullable<global::System.DateTime> _FinishAt;
        partial void OnFinishAtChanging(Nullable<global::System.DateTime> value);
        partial void OnFinishAtChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Defect
        {
            get
            {
                return _Defect;
            }
            set
            {
                OnDefectChanging(value);
                ReportPropertyChanging("Defect");
                _Defect = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Defect");
                OnDefectChanged();
            }
        }
        private Nullable<global::System.Int32> _Defect;
        partial void OnDefectChanging(Nullable<global::System.Int32> value);
        partial void OnDefectChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comment
        {
            get
            {
                return _Comment;
            }
            set
            {
                OnCommentChanging(value);
                ReportPropertyChanging("Comment");
                _Comment = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comment");
                OnCommentChanged();
            }
        }
        private global::System.String _Comment;
        partial void OnCommentChanging(global::System.String value);
        partial void OnCommentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AssemblyType
        {
            get
            {
                return _AssemblyType;
            }
            set
            {
                OnAssemblyTypeChanging(value);
                ReportPropertyChanging("AssemblyType");
                _AssemblyType = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AssemblyType");
                OnAssemblyTypeChanged();
            }
        }
        private global::System.String _AssemblyType;
        partial void OnAssemblyTypeChanging(global::System.String value);
        partial void OnAssemblyTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ApprovedBy
        {
            get
            {
                return _ApprovedBy;
            }
            set
            {
                OnApprovedByChanging(value);
                ReportPropertyChanging("ApprovedBy");
                _ApprovedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ApprovedBy");
                OnApprovedByChanged();
            }
        }
        private Nullable<global::System.Int32> _ApprovedBy;
        partial void OnApprovedByChanging(Nullable<global::System.Int32> value);
        partial void OnApprovedByChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DOSBModel", "FK_Torque_Employee", "Employee")]
        public Employee Employee
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("DOSBModel.FK_Torque_Employee", "Employee").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("DOSBModel.FK_Torque_Employee", "Employee").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Employee> EmployeeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("DOSBModel.FK_Torque_Employee", "Employee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Employee>("DOSBModel.FK_Torque_Employee", "Employee", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DOSBModel", "FK_Torque_Approver", "Employee")]
        public Employee Approver
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("DOSBModel.FK_Torque_Approver", "Employee").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("DOSBModel.FK_Torque_Approver", "Employee").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Employee> ApproverReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("DOSBModel.FK_Torque_Approver", "Employee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Employee>("DOSBModel.FK_Torque_Approver", "Employee", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DOSBModel", Name="Wells")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Wells : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Wells object.
        /// </summary>
        /// <param name="wellId">Initial value of the WellId property.</param>
        public static Wells CreateWells(global::System.Int32 wellId)
        {
            Wells wells = new Wells();
            wells.WellId = wellId;
            return wells;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 WellId
        {
            get
            {
                return _WellId;
            }
            set
            {
                if (_WellId != value)
                {
                    OnWellIdChanging(value);
                    ReportPropertyChanging("WellId");
                    _WellId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("WellId");
                    OnWellIdChanged();
                }
            }
        }
        private global::System.Int32 _WellId;
        partial void OnWellIdChanging(global::System.Int32 value);
        partial void OnWellIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> FieldId
        {
            get
            {
                return _FieldId;
            }
            set
            {
                OnFieldIdChanging(value);
                ReportPropertyChanging("FieldId");
                _FieldId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FieldId");
                OnFieldIdChanged();
            }
        }
        private Nullable<global::System.Int32> _FieldId;
        partial void OnFieldIdChanging(Nullable<global::System.Int32> value);
        partial void OnFieldIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.String _Status;
        partial void OnStatusChanging(global::System.String value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TypeId
        {
            get
            {
                return _TypeId;
            }
            set
            {
                OnTypeIdChanging(value);
                ReportPropertyChanging("TypeId");
                _TypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TypeId");
                OnTypeIdChanged();
            }
        }
        private Nullable<global::System.Int32> _TypeId;
        partial void OnTypeIdChanging(Nullable<global::System.Int32> value);
        partial void OnTypeIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DOSBModel", "FK_CompletionActivities_Wells", "CompletionActivities")]
        public EntityCollection<RigActivities> CompletionActivities
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RigActivities>("DOSBModel.FK_CompletionActivities_Wells", "CompletionActivities");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RigActivities>("DOSBModel.FK_CompletionActivities_Wells", "CompletionActivities", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DOSBModel", "FK_Wells_Fields", "Fields")]
        public Fields Field
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Fields>("DOSBModel.FK_Wells_Fields", "Fields").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Fields>("DOSBModel.FK_Wells_Fields", "Fields").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Fields> FieldReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Fields>("DOSBModel.FK_Wells_Fields", "Fields");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Fields>("DOSBModel.FK_Wells_Fields", "Fields", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DOSBModel", "FK_Wells_WellTypes", "WellTypes")]
        public WellTypes WellType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WellTypes>("DOSBModel.FK_Wells_WellTypes", "WellTypes").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WellTypes>("DOSBModel.FK_Wells_WellTypes", "WellTypes").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<WellTypes> WellTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WellTypes>("DOSBModel.FK_Wells_WellTypes", "WellTypes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<WellTypes>("DOSBModel.FK_Wells_WellTypes", "WellTypes", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DOSBModel", Name="WellTypes")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class WellTypes : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new WellTypes object.
        /// </summary>
        /// <param name="wellTypeId">Initial value of the WellTypeId property.</param>
        public static WellTypes CreateWellTypes(global::System.Int32 wellTypeId)
        {
            WellTypes wellTypes = new WellTypes();
            wellTypes.WellTypeId = wellTypeId;
            return wellTypes;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 WellTypeId
        {
            get
            {
                return _WellTypeId;
            }
            set
            {
                if (_WellTypeId != value)
                {
                    OnWellTypeIdChanging(value);
                    ReportPropertyChanging("WellTypeId");
                    _WellTypeId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("WellTypeId");
                    OnWellTypeIdChanged();
                }
            }
        }
        private global::System.Int32 _WellTypeId;
        partial void OnWellTypeIdChanging(global::System.Int32 value);
        partial void OnWellTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DOSBModel", "FK_Wells_WellTypes", "Wells")]
        public EntityCollection<Wells> Wells
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Wells>("DOSBModel.FK_Wells_WellTypes", "Wells");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Wells>("DOSBModel.FK_Wells_WellTypes", "Wells", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DOSBModel", Name="WorkshopAssignment")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class WorkshopAssignment : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new WorkshopAssignment object.
        /// </summary>
        /// <param name="employeeId">Initial value of the EmployeeId property.</param>
        /// <param name="workshopDailyActivityId">Initial value of the WorkshopDailyActivityId property.</param>
        /// <param name="assignedAt">Initial value of the AssignedAt property.</param>
        public static WorkshopAssignment CreateWorkshopAssignment(global::System.Int32 employeeId, global::System.Int32 workshopDailyActivityId, global::System.DateTime assignedAt)
        {
            WorkshopAssignment workshopAssignment = new WorkshopAssignment();
            workshopAssignment.EmployeeId = employeeId;
            workshopAssignment.WorkshopDailyActivityId = workshopDailyActivityId;
            workshopAssignment.AssignedAt = assignedAt;
            return workshopAssignment;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EmployeeId
        {
            get
            {
                return _EmployeeId;
            }
            set
            {
                if (_EmployeeId != value)
                {
                    OnEmployeeIdChanging(value);
                    ReportPropertyChanging("EmployeeId");
                    _EmployeeId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("EmployeeId");
                    OnEmployeeIdChanged();
                }
            }
        }
        private global::System.Int32 _EmployeeId;
        partial void OnEmployeeIdChanging(global::System.Int32 value);
        partial void OnEmployeeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 WorkshopDailyActivityId
        {
            get
            {
                return _WorkshopDailyActivityId;
            }
            set
            {
                if (_WorkshopDailyActivityId != value)
                {
                    OnWorkshopDailyActivityIdChanging(value);
                    ReportPropertyChanging("WorkshopDailyActivityId");
                    _WorkshopDailyActivityId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("WorkshopDailyActivityId");
                    OnWorkshopDailyActivityIdChanged();
                }
            }
        }
        private global::System.Int32 _WorkshopDailyActivityId;
        partial void OnWorkshopDailyActivityIdChanging(global::System.Int32 value);
        partial void OnWorkshopDailyActivityIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime AssignedAt
        {
            get
            {
                return _AssignedAt;
            }
            set
            {
                OnAssignedAtChanging(value);
                ReportPropertyChanging("AssignedAt");
                _AssignedAt = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AssignedAt");
                OnAssignedAtChanged();
            }
        }
        private global::System.DateTime _AssignedAt;
        partial void OnAssignedAtChanging(global::System.DateTime value);
        partial void OnAssignedAtChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> EndedAt
        {
            get
            {
                return _EndedAt;
            }
            set
            {
                OnEndedAtChanging(value);
                ReportPropertyChanging("EndedAt");
                _EndedAt = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EndedAt");
                OnEndedAtChanged();
            }
        }
        private Nullable<global::System.DateTime> _EndedAt;
        partial void OnEndedAtChanging(Nullable<global::System.DateTime> value);
        partial void OnEndedAtChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DOSBModel", "FK_WorkshopAssignment_Employee", "Employee")]
        public Employee Employee
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("DOSBModel.FK_WorkshopAssignment_Employee", "Employee").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("DOSBModel.FK_WorkshopAssignment_Employee", "Employee").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Employee> EmployeeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("DOSBModel.FK_WorkshopAssignment_Employee", "Employee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Employee>("DOSBModel.FK_WorkshopAssignment_Employee", "Employee", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DOSBModel", "FK_WorkshopAssignment_WorkshopDailyActivity", "WorkshopDailyActivity")]
        public WorkshopDailyActivity WorkshopDailyActivity
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WorkshopDailyActivity>("DOSBModel.FK_WorkshopAssignment_WorkshopDailyActivity", "WorkshopDailyActivity").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WorkshopDailyActivity>("DOSBModel.FK_WorkshopAssignment_WorkshopDailyActivity", "WorkshopDailyActivity").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<WorkshopDailyActivity> WorkshopDailyActivityReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WorkshopDailyActivity>("DOSBModel.FK_WorkshopAssignment_WorkshopDailyActivity", "WorkshopDailyActivity");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<WorkshopDailyActivity>("DOSBModel.FK_WorkshopAssignment_WorkshopDailyActivity", "WorkshopDailyActivity", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DOSBModel", Name="WorkshopDailyActivity")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class WorkshopDailyActivity : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new WorkshopDailyActivity object.
        /// </summary>
        /// <param name="activityId">Initial value of the ActivityId property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        /// <param name="forklift">Initial value of the Forklift property.</param>
        /// <param name="torque">Initial value of the Torque property.</param>
        /// <param name="pressureTest">Initial value of the PressureTest property.</param>
        /// <param name="createdAt">Initial value of the CreatedAt property.</param>
        public static WorkshopDailyActivity CreateWorkshopDailyActivity(global::System.Int32 activityId, global::System.String description, global::System.Int32 forklift, global::System.Int32 torque, global::System.Int32 pressureTest, global::System.DateTime createdAt)
        {
            WorkshopDailyActivity workshopDailyActivity = new WorkshopDailyActivity();
            workshopDailyActivity.ActivityId = activityId;
            workshopDailyActivity.Description = description;
            workshopDailyActivity.Forklift = forklift;
            workshopDailyActivity.Torque = torque;
            workshopDailyActivity.PressureTest = pressureTest;
            workshopDailyActivity.CreatedAt = createdAt;
            return workshopDailyActivity;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ActivityId
        {
            get
            {
                return _ActivityId;
            }
            set
            {
                if (_ActivityId != value)
                {
                    OnActivityIdChanging(value);
                    ReportPropertyChanging("ActivityId");
                    _ActivityId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ActivityId");
                    OnActivityIdChanged();
                }
            }
        }
        private global::System.Int32 _ActivityId;
        partial void OnActivityIdChanging(global::System.Int32 value);
        partial void OnActivityIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Forklift
        {
            get
            {
                return _Forklift;
            }
            set
            {
                OnForkliftChanging(value);
                ReportPropertyChanging("Forklift");
                _Forklift = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Forklift");
                OnForkliftChanged();
            }
        }
        private global::System.Int32 _Forklift;
        partial void OnForkliftChanging(global::System.Int32 value);
        partial void OnForkliftChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Torque
        {
            get
            {
                return _Torque;
            }
            set
            {
                OnTorqueChanging(value);
                ReportPropertyChanging("Torque");
                _Torque = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Torque");
                OnTorqueChanged();
            }
        }
        private global::System.Int32 _Torque;
        partial void OnTorqueChanging(global::System.Int32 value);
        partial void OnTorqueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PressureTest
        {
            get
            {
                return _PressureTest;
            }
            set
            {
                OnPressureTestChanging(value);
                ReportPropertyChanging("PressureTest");
                _PressureTest = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PressureTest");
                OnPressureTestChanged();
            }
        }
        private global::System.Int32 _PressureTest;
        partial void OnPressureTestChanging(global::System.Int32 value);
        partial void OnPressureTestChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedAt
        {
            get
            {
                return _CreatedAt;
            }
            set
            {
                OnCreatedAtChanging(value);
                ReportPropertyChanging("CreatedAt");
                _CreatedAt = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedAt");
                OnCreatedAtChanged();
            }
        }
        private global::System.DateTime _CreatedAt;
        partial void OnCreatedAtChanging(global::System.DateTime value);
        partial void OnCreatedAtChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> FinishedAt
        {
            get
            {
                return _FinishedAt;
            }
            set
            {
                OnFinishedAtChanging(value);
                ReportPropertyChanging("FinishedAt");
                _FinishedAt = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FinishedAt");
                OnFinishedAtChanged();
            }
        }
        private Nullable<global::System.DateTime> _FinishedAt;
        partial void OnFinishedAtChanging(Nullable<global::System.DateTime> value);
        partial void OnFinishedAtChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CanceledAt
        {
            get
            {
                return _CanceledAt;
            }
            set
            {
                OnCanceledAtChanging(value);
                ReportPropertyChanging("CanceledAt");
                _CanceledAt = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CanceledAt");
                OnCanceledAtChanged();
            }
        }
        private Nullable<global::System.DateTime> _CanceledAt;
        partial void OnCanceledAtChanging(Nullable<global::System.DateTime> value);
        partial void OnCanceledAtChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DOSBModel", "FK_WorkshopAssignment_WorkshopDailyActivity", "WorkshopAssignment")]
        public EntityCollection<WorkshopAssignment> WorkshopAssignments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<WorkshopAssignment>("DOSBModel.FK_WorkshopAssignment_WorkshopDailyActivity", "WorkshopAssignment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<WorkshopAssignment>("DOSBModel.FK_WorkshopAssignment_WorkshopDailyActivity", "WorkshopAssignment", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
